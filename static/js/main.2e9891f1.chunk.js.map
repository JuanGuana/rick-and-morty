{"version":3,"sources":["helpers/getFetchData.js","components/Character/styles.js","components/Character/index.js","pages/Single/index.js","pages/Home/index.js","App.js","index.js"],"names":["getAllFetchCharacters","a","fetch","resp","json","results","getSingleFetchCharacter","id","data","styles","theme","root","background","color","padding","boxShadow","image","height","maxWidth","borderRadius","border","text","fontSize","link","useStyles","makeStyles","Character","showlink","classes","Card","className","CardMedia","src","alt","name","CardContent","Typography","variant","species","status","to","gender","origin","location","Single","useParams","useState","character","setCharacter","useEffect","getSingleCharacter","console","log","Container","component","Box","pt","Grid","align","Home","characterList","setCharacterList","getAllCharacter","container","spacing","map","item","xs","sm","md","lg","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e9891f1.chunk.js","sourcesContent":["const getAllFetchCharacters = async () => {\r\n  const resp = await fetch('https://rickandmortyapi.com/api/character/');\r\n  const { results } = await resp.json();\r\n  return results;\r\n};\r\n\r\nconst getSingleFetchCharacter = async (id) => {\r\n  const resp = await fetch(`https://rickandmortyapi.com/api/character/${id}`);\r\n  const data = await resp.json();\r\n  return data;\r\n};\r\n\r\nexport { getAllFetchCharacters, getSingleFetchCharacter };\r\n","const styles = (theme) => ({\r\n  root: {\r\n    background: '#0d739a',\r\n    color: '#f0f0f0',\r\n    padding: '8px',\r\n    boxShadow: '5px 5px 10px #323232',\r\n    '&:hover': {\r\n      boxShadow: '15px 15px 30px #323232',\r\n    },\r\n    \r\n  },\r\n  image: {\r\n    height: 'auto',\r\n    maxWidth: '200px',\r\n    borderRadius: '50%',\r\n    border: 'solid 8px #72f522',\r\n  },\r\n  text: {\r\n    fontSize: '1.4rem',\r\n  },\r\n  link: {\r\n    color: '#72f522',\r\n    fontSize: '1.4rem',\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './styles';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Character = ({ data, showlink }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardMedia>\r\n        <img className={classes.image} src={data.image} alt={data.name}></img>\r\n      </CardMedia>\r\n      <CardContent>\r\n        <Typography variant='h3'>{data.name}</Typography>\r\n\r\n        <Typography\r\n          className={classes.text}\r\n        >{`Especie: ${data.species}`}</Typography>\r\n        <Typography\r\n          className={classes.text}\r\n        >{`Estado: ${data.status}`}</Typography>\r\n        {showlink ? (\r\n          <Link className={classes.link} to={`/personaje/${data.id}`}>\r\n            Ver mas\r\n          </Link>\r\n        ) : (\r\n          <>\r\n            <Typography\r\n              className={classes.text}\r\n            >{`Género: ${data.gender}`}</Typography>\r\n            <Typography\r\n              className={classes.text}\r\n            >{`Origen: ${data.origin?.name}`}</Typography>\r\n\r\n            <Typography\r\n              className={classes.text}\r\n            >{`Localización: ${data.location?.name}`}</Typography>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { getSingleFetchCharacter } from '../../helpers/getFetchData';\r\n\r\nimport { useParams } from 'react-router';\r\nimport Character from '../../components/Character';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\n\r\nconst Single = () => {\r\n  const { id } = useParams();\r\n  const [character, setCharacter] = useState({});\r\n  useEffect(() => {\r\n    const getSingleCharacter = async () => {\r\n      const data = await getSingleFetchCharacter(id);\r\n      setCharacter(data);\r\n    };\r\n    getSingleCharacter();\r\n  }, []);\r\n  console.log(character);\r\n  return (\r\n    <Container component={Box} maxWidth='xs' pt={8}>\r\n      <Grid align='center'>\r\n        <Character data={character} showlink={false} />\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Single;\r\n","import {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useEffect, useState } from 'react';\r\nimport Character from '../../components/Character';\r\nimport { getAllFetchCharacters } from '../../helpers/getFetchData';\r\n\r\nconst Home = () => {\r\n  const [characterList, setCharacterList] = useState([]);\r\n  useEffect(() => {\r\n    const getAllCharacter = async () => {\r\n      const data = await getAllFetchCharacters();\r\n      setCharacterList(data);\r\n    };\r\n    getAllCharacter();\r\n  }, []);\r\n\r\n  return (\r\n    <Container component={Box} pt={4}>\r\n      <Typography variant='h1' align=\"center\" >RICK AND MORTY</Typography>\r\n      <Grid container spacing={8} align=\"center\">\r\n        {characterList.map((item) => (\r\n          <Grid item key={item.id} xs={12} sm={6} md={4} lg={3}>\r\n            <Character data={item} showlink={true}/>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Single from './pages/Single';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/personaje/:id' component={Single} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}